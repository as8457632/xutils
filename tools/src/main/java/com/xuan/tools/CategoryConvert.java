package com.xuan.tools;

import java.util.HashMap;
import java.util.Map;

import com.alibaba.fastjson.JSON;

/**
 * @author xuan
 * @since 2020/3/28
 */
public class CategoryConvert {

    public static void main(String[] args) {
        Map<String, Long> kbMap = kbMap();
        Map<String, Long> eleMap = eleMap();
        Map<String, Long> map = mergeMap(kbMap, eleMap);
        System.out.println(JSON.toJSONString(map));
    }

    private static Map<String, Long> eleMap() {
        String c
            = "170200,90100,90600,91100,50100,50200,50300,50500,50900,51000,51300,51400,51600,51700,51800,51900,60200,"
            + "60400,61100,61400,61500,61600,61800,61900,63400,63800,64200,64500,64600,64800,65000,65400,65500,65600,"
            + "65700,65800,65900,66000,66100,66200,66300,66400,66500,66600,66700,66800";
        String f
            = "201334102,201333818,201333820,201333737,201334201,201329409,201335001,201333513,201333617,201329414,"
            + "201333402,201331203,201335301,201335401,201333507,201331803,201333622,201333624,201333533,201329534,"
            + "201329442,201329537,201329538,201333539,201333529,201333542,201333645,201329456,201329550,201333552,"
            + "201329458,201329556,201333652,201329561,201333557,201329463,201333556,201329562,201329557,201329558,"
            + "201333646,201329563,201329559,201329445,201329443,201329444";
        Map<String, Long> m = toMap(c, f);
        System.out.println(JSON.toJSONString(m));
        return m;
    }

    private static Map<String, Long> kbMap() {
        String c
            = "250100,400100,350100,350600,320100,190100,190200,190300,190400,190500,190600,190700,190800,191000,"
            + "191200,81800,81900,82000,82200,82500,82600,82700,82800,83000,10400,11200,60100,60200,60400,60700,"
            + "60800,61100,61200,61300,61400,61500,61700,61800,61900,63300,63400,63500,63600,63800,64100,64300,64500,"
            + "64800,65000,65100,71300,71400,71500,72100,140100,202900,203000,80100,200200,74600,81100,90200,200400,"
            + "73500,81500,90800,203200,51200,81000,52000,110500,140400,74700,202100,110300,200900,80500,141400,"
            + "202500,201000,110800,203100,81200,111200,73800,80700,81600,201300,81700,110900,81400,51500,110200,"
            + "201200,80800,73100,111000,200600,81300,140200,201900,74300,140500,140600,202400";
        String f
            = "201330405,201335701,201333922,201335801,201333745,201335901,201336001,201333716,201333599,201333700,"
            + "201333901,201333717,201333718,201336101,201333734,201333725,201333812,201334002,201333906,201333727,"
            + "201333815,201333816,201333728,201333729,201333824,201334010,201329521,201333622,201333624,201333527,"
            + "201333531,201333533,201329554,201329459,201329534,201329536,201333636,201333640,201333641,201329447,"
            + "201333529,201329541,201333540,201333643,201333644,201333647,201329456,201329551,201329553,201329461,"
            + "201330102,201333562,201331402,201335601,201333703,201336201,201333570,201336301,201329469,201336401,"
            + "201333721,201333731,201329471,201332502,201333723,201334005,201329483,201333506,201333810,201329508,"
            + "201333803,201329574,201336002,201333665,201336501,201333662,201329577,201335302,201333667,201329571,"
            + "201336601,201333571,201334003,201329485,201336701,201333719,201333811,201329476,201333724,201333714,"
            + "201333722,201333621,201333302,201333663,201333720,201336801,201333805,201333659,201333905,201333705,"
            + "201333664,201336901,201333595,201333591,201337001";
        Map<String, Long> m = toMap(c, f);
        System.out.println(JSON.toJSONString(m));
        return m;
    }

    private static void checkEle() {
        String d
            = "51900,66400,170200,50900,51700,65800,66600,50300,65400,65500,64200,61800,60200,60400,91100,51300,"
            + "51400,63400,50500,65900,61900,65600,51600,51800,61400,65000,66100,66500,51000,66800,90600,64600,65700,"
            + "63800,66700,61500,66200,64800,90100,61600,66300,50100,61100,50200,64500,66000";

        check(eleMap(), d);
    }

    private static void checkKb() {
        String d
            = "63300,140100,202900,203000,50900,60800,80100,82600,50300,82700,200200,190100,190700,61800,74600,81100,"
            + "90200,200400,73500,320100,61700,64300,81500,90800,203200,10400,51200,61300,64100,65100,60200,60400,"
            + "81000,51300,51400,52000,63400,71400,110500,140400,191200,50500,74700,202100,350100,61900,82000,110300,"
            + "200900,71500,80500,83000,141400,190300,202500,51600,51800,61400,65000,190400,201000,82200,110800,"
            + "203100,400100,51000,60700,81900,90600,81200,60100,61200,81800,111200,73800,80700,82500,11200,72100,"
            + "81600,190200,190500,201300,63800,81700,110900,61500,63500,63600,81400,51500,64800,110200,190800,"
            + "201200,80800,190600,50100,71300,73100,111000,200600,61100,82800,81300,140200,191000,201900,350600,"
            + "50200,64500,74300,140500,140600,202400,250100";

        check(mergeMap(eleMap(), kbMap()), d);
    }

    private static void check(Map<String, Long> eleMap, String fromOdbs) {
        String[] ds = fromOdbs.split(",");

        for (int i = 0, n = ds.length; i < n; i++) {
            if (null == eleMap.get(ds[i])) {
                System.out.println(ds[i]);
            }
        }
    }

    private static Map<String, Long> toMap(String eleC, String eleF) {
        Map<String, Long> map = new HashMap<>();
        String[] eleCs = eleC.split(",");
        String[] eleFs = eleF.split(",");

        for (int i = 0, n = eleCs.length; i < n; i++) {
            map.put(eleCs[i], Long.valueOf(eleFs[i]));
        }
        return map;
    }

    private static Map<String, Long> mergeMap(Map<String, Long> m1, Map<String, Long> m2) {
        Map<String, Long> m = new HashMap<>();
        m.putAll(m1);
        m.putAll(m2);
        return m;
    }

}
